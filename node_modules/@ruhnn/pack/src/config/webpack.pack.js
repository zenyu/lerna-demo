const merge = require('webpack-merge');
const CleanWebpackPlugin = require('clean-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const TerserPlugin = require('terser-webpack-plugin');
const OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');
const safePostCssParser = require('postcss-safe-parser');
const WebpackBar = require('webpackbar');
const paths = require('./paths');
const allLoader = require('./loader.all');

module.exports = (opts, config) => {
    const {name, environment} = opts;
    const isEnvDevelopment = environment === 'development';
    const isNotEnvDevelopment = !isEnvDevelopment;
    const rules = allLoader(
        {
            isEnvDevelopment: environment === 'development',
            isEnvProduction: isNotEnvDevelopment,
        },
        {incompatible: true, sourceMap: false},
        false,
    );

    return merge({
        mode: ['development', 'production', 'none'].includes(environment)
            ? process.env.NODE_ENV
            : 'production',
        entry: paths.appIndexJs,
        output: {
            path: paths.appDist, // 生成的文件存放路径
            filename: 'index.js', // 生成的文件名字(默认为 index.js)
            library: name, // 包名
            libraryTarget: 'umd',
            globalObject: 'this',
        },
        externals: {
            react: 'react',
            'react-router': 'react-router',
            'react-dom': 'react-dom',
            'react-router-dom': 'react-router-dom',
            redux: 'redux',
            'react-redux': 'react-redux',
            antd: 'antd',
            'antd-mobile': 'antd-mobile',
            'react-loadable': 'react-loadable',
            jquery: 'jquery',
            lodash: 'lodash',
            moment: 'moment',
        },
        module: {rules},
        plugins: [
            // 按需清空打包目录文件
            new CleanWebpackPlugin(),
            // 压缩 css
            new MiniCssExtractPlugin({
                filename: 'css/[name].css',
                chunkFilename: 'css/[name].chunk.css',
            }),
            new WebpackBar({minimal: false}),
        ],
        optimization: {
            nodeEnv: process.env.NODE_ENV,
            minimize: isNotEnvDevelopment,
            minimizer: [
                // js 压缩
                new TerserPlugin({
                    terserOptions: {
                        parse: {
                            // 转换 ecma 8 代码
                            // 'compress' 'output' 使用 ecma 5，参考：
                            // https://github.com/facebook/create-react-app/pull/4234
                            ecma: 8,
                        },
                        compress: {
                            ecma: 5,
                            warnings: false,

                            // 关闭比较表达式优化  (a && a===1) || (a && a===2) -> a && (a===1||a===2)
                            comparisons: false,
                            // 内联调用压缩后存在 bug
                            // https://github.com/terser-js/terser/issues/120
                            inline: 2,
                        },
                        mangle: {
                            safari10: true,
                        },
                        output: {
                            ecma: 5,
                            comments: false,
                            // emoji 和 regex 编码可能有问题
                            // https://github.com/facebook/create-react-app/issues/2488
                            ascii_only: true,
                        },
                    },
                    // 多进程构建，默认：内核数目-1
                    parallel: true,
                    // 开启文件缓存
                    cache: true,
                    sourceMap: false,
                }),
                // 优化，压缩css
                new OptimizeCSSAssetsPlugin({
                    canPrint: false,
                    // cssnano 参数
                    cssProcessorOptions: {
                        safe: true,
                        parser: safePostCssParser,
                        map: false,
                    },
                }),
            ],
        },
    }, config);
};